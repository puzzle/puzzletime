-#  Copyright (c) 2006-2017, Puzzle ITC GmbH. This file is part of
-#  PuzzleTime and licensed under the Affero General Public License version 3
-#  or later. See the COPYING file at the top-level directory or at
-#  https://github.com/puzzle/puzzletime.


- url ||= nil
= plain_form(@worktime,
                url: url,
                cancel_url: params[:back_url].presence || worktimes_path(week_date: @worktime.work_date)) do |f|
  = hidden_field_tag :back_url, params[:back_url]
  = f.error_messages

  - if record_other?
    = f.labeled_belongs_to_field(:employee_id,
                                  data: { remote: true,
                                          url: url_for(action: 'existing'),
                                          dynamic_params: 'ordertime[work_date]' })
  = f.labeled(:account_id) do
    %div
      = select_tag('ordertime[account_id]',
                  work_item_option(@worktime.account),
                  placeholder: 'Suchen...',
                  autocomplete: 'off',
                  class: entry.new_record? ? 'initial-focus' : '',
                  required: true,
                  data: { autocomplete: 'work_item',
                          url: search_work_items_path })
      %span{ title: "", data: { toggle: "tooltip", original_title: "Wähle eine Buchungsposition aus" }, class: "live-budget-bar"}
        %a.progress
          %div#live-bar-success.progress-bar

  = f.labeled_input_field(:ticket, span: 2)
  = f.labeled_text_area(:description)
  = f.labeled_date_field(:work_date,
                         data: { remote: true,
                                 url: url_for(action: 'existing'),
                                 dynamic_params: 'ordertime[employee_id]' })
  .form-group
    = f.label(:hours, class: 'col-md-2 control-label')
    .col-md-1
      = f.text_field(:hours, value: @worktime.hours, class: ('initial-focus' if params[:template]))
    = f.label(:from_start_time, class: 'col-md-1 control-label')
    .col-md-1
      = f.text_field(:from_start_time, value: format_time(@worktime.from_start_time))
    = f.label(:to_end_time, class: 'col-md-1 control-label')
    .col-md-1
      = f.text_field(:to_end_time, value: format_time(@worktime.to_end_time))

  = f.labeled_boolean_field(:billable, detail: 'Leistung ist verrechenbar.')
  - if Settings.meal_compensation.active
    = f.labeled_boolean_field(:meal_compensation, detail: "Ich war beim Kunden vor Ort und möchte die #{link_to('Verpflegungsentschädigung', Settings.meal_compensation.url)} erhalten.".html_safe)

  .form-group
    .col-md-offset-2.col-md-8
      = f.submit_button(ti('button.save'))
      - unless @worktime.id || params[:other]
        = f.button('Speichern & Neu',
                   class: 'btn btn-default',
                   name: 'redirect_to_self',
                   value: 'true')
      = f.cancel_link
