-#  Copyright (c) 2006-2017, Puzzle ITC GmbH. This file is part of
-#  PuzzleTime and licensed under the Affero General Public License version 3
-#  or later. See the COPYING file at the top-level directory or at
-#  https://github.com/puzzle/puzzletime.


- if @report.present?
  .unindented
    %table.reports-workload.table.table-hover
      %thead
        %tr
          %th.nowrap{style: 'width: 14%;'}= sort_link(:employee, 'Member', default: true, default_dir: 'asc')
          %th.right.nowrap= sort_link(:must_hours, 'Soll')
          %th.right.nowrap= sort_link(:worktime_balance, 'Ãœber-/Unterzeit')
          %th.right.nowrap= sort_link(:absencetime_hours, 'Absenzen')
          - if can?(:manage, Reports::Workload)
            %th.nowrap Auftrag
            %th.nowrap Beschreibung
          %th.right.nowrap= sort_link(:ordertime_hours, 'Arbeitszeit')
          %th.right.nowrap{ title: 'Kundenprojekte / Ist (ohne Absenzen)' }
            = sort_link(:workload, 'Auslastung')
          %th.right.nowrap{ title: 'Verrechenbar / Kundenprojekte' }
            = sort_link(:billability, 'Verrechenbarkeit')

      - @report.entries.each do |entry|
        %tbody{id: "employee-#{entry.employee.id}-summary"}
          %tr
            %td= entry.employee.to_s
            %td
              .data-item
                %span.figure= format_workload_hours(entry.must_hours)
                %span.unit h
            %td
              .data-item
                %span.figure= format_workload_worktime_balance(entry.worktime_balance)
                %span.unit h
            %td
              - if can?(:manage, Reports::Workload)
                %a.data-item{ href: workload_absences_url(entry.employee.id, @report) }
                  %span.figure= format_workload_hours(entry.paid_absence_hours)
                  %span.unit h
              - else
                .data-item
                  %span.figure= format_workload_hours(entry.paid_absence_hours)
                  %span.unit h
            - if can?(:manage, Reports::Workload)
              %td
                - if entry.order_entries.present?
                  %a{data: {toggle: "employee-#{entry.employee.id}-ordertimes"}} Details
              %td
            %td
              .data-item
                %span.figure= format_workload_hours(entry.ordertime_hours)
                %span.unit h
            %td
              .data-item
                %span.figure= format_workload_load(entry.workload)
                %span.unit %
            %td
              .data-item
                %span.figure= format_workload_billability(entry.billability)
                %span.unit %
        - if can?(:manage, Reports::Workload) && entry.order_entries.present?
          %tbody.employee-ordertimes{id: "employee-#{entry.employee.id}-ordertimes", style: 'display: none;'}
            - entry.order_entries.each do |ordertime_entry|
              %tr
                %td
                %td
                %td
                %td
                %td= ordertime_entry.label
                %td= ordertime_entry.description
                %td
                  %a.data-item{href: workload_hours_url(ordertime_entry, entry, @report)}
                    %span.figure= format_workload_hours(ordertime_entry.hours)
                    %span.unit h
                %td
                %td
                  .data-item
                    %span.figure= format_workload_billability(ordertime_entry.billability_percent)
                    %span.unit %



- else
  .table= ti(:no_list_entries)
